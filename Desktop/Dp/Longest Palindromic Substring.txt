public String longestPalindrome(String s) {
        int n=s.length();
        int[][] dp=new int[n][n];
        
        int len=0;
        int s_point=0;
      int count=0;
        
        for(int gap=0;gap<n;gap++)
        {
            for(int i=0,j=gap;j<n;i++,j++)
            {
                if(gap==0)
                {
                    dp[i][j]=1;
                   
                }
                else if(gap==1&&s.charAt(i)==s.charAt(j))
                {
                    dp[i][j]=2;
                }
                else
                {
                     if(s.charAt(i)==s.charAt(j))
                      {
                         if(dp[i+1][j-1]>0)
                          {
                             dp[i][j]=2+dp[i+1][j-1];
                          }
                     }
                     else
                       {
                         dp[i][j]=0;
                    }
                    
                }
                
                if(dp[i][j]>len)
                {
                    len=dp[i][j];
                    s_point=i;
                }
            count=count+dp[i][j]>0?1:0;
            }
        }
        
        String ans=s.substring(s_point,s_point+len);
        
      //return count;
        return ans;
    }