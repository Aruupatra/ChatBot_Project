class Solution {
    public static int fib_memo(int n,int[] dp)
    {
        if(n<=1)
        {
            return dp[n]=n==0?0:1;
        }
        
        if(dp[n]!=0)
        {
            return dp[n];
        }
        
        return dp[n]=fib_memo(n-1,dp)+fib_memo(n-2,dp);
    }
    public static int fib_tebu(int n,int[] dp)
    {
        for(int i=0;i<=n;i++)
        {
            if(i<=1)
            {
                dp[i]=i;
                continue;
            }
            dp[i]=dp[i-1]+dp[i-2];
        }
        
        return dp[n];
    }
    public static int optimiser(int n)
    {
        int a=0;
        int b=1;
        for(int i=1;i<=n;i++)
        {
            int sum=a+b;
            a=b;
            b=sum;
        }
        return a;
    }
    public int fib(int n) {
        int dp[]=new int[n+1];
       // int ans=fib_memo(n,dp);
       // int ans=fib_tebu(n,dp);
        int ans=optimiser(n);
        return ans;
    }
}