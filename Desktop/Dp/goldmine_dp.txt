  private static int[][] dirs={{-1,1},{0,1},{1,1}};
    public static int goldmine(int sr,int sc,int er,int ec,int[][] grid,int[][] dp)
    {
        if(sc==ec)
        {
            return dp[sr][sc]=grid[sr][sc];
            
        }
        if(dp[sr][sc]!=-1)
        {
            return dp[sr][sc];
        }
        int maxcoin=0;
        for(int d=0;d<dirs.length;d++)
        {
            int r=sr+dirs[d][0];
            int c=sc+dirs[d][1];
            if(r>=0&&c>=0&&r<dp.length&&c<dp[0].length)
            {
                maxcoin=Math.max(maxcoin,goldmine(r,c,er,ec,grid,dp))+grid[sr][sc];
            }
        }
        return dp[sr][sc]=maxcoin;
        
    }
    static int maxGold(int n, int m, int M[][])
    {
        // code here
        int[][] dp=new int[n][m];
       
        for(int[] d:dp)
        {
            Arrays.fill(d,-1);
        }
         int maxcoin=0;
        for(int r=0;r<M.length;r++)
        {
        maxcoin=Math.max(maxcoin,goldmine(r,0,n-1,m-1,M,dp));
        }
        
        return maxcoin;
        
        
    }