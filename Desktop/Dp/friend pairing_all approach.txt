 public static long friend(int n,long dp[])
    {
        long mod=(long)1e9+7;
        if(n<=1)
        {
            return dp[n]=1;
        }
        if(dp[n]!=0)
        {
            return dp[n];
        }
        long singleup=friend(n-1,dp)%mod;
        long dualup=(n-1)*friend(n-2,dp)%mod;
        return dp[n]=(singleup+dualup)%mod;
    }
    public static long friendsPairing_tebu(int N,long[] dp)
    {
        long mod=(long)1e9+7;
        for(int n=0;n<=N;n++)
        {
            if(n<=1)
            {
                dp[n]=1;
                continue;
            }
            dp[n]=(dp[n-1]%mod+(n-1)*dp[n-2]%mod)%mod;
        }
        return dp[N];
    }
    public long countFriendsPairings(int n) 
    { 
       //code here
       long[]dp=new long[n+1];
       
       long ans=friend(n,dp);
       return ans;
    }