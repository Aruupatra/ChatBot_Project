public static int countWays_memo(String s1,String s2,int n,int m,int[][] dp)
    {
        if(m==0)
        {
            return dp[n][m]=1;
        }
        else if(n==0)
        {
            return dp[n][m]=0;
        }
        
        if(dp[n][m]!=-1)
        {
            return dp[n][m];
        }
        
        int a=countWays_memo(s1,s2,n-1,m-1,dp);
        int b=countWays_memo(s1,s2,n-1,m,dp);
        if(s1.charAt(n-1)==s2.charAt(m-1))
        {
            return dp[n][m]=a+b;
        }
        else
        {
            return dp[n][m]=b;
        }
        
    }
    public static int countWays_tabu(String s1,String s2,int N,int M,int[][] dp)
    {
        
        for(int n=0;n<=N;n++)
        {
            for(int m=0;m<=M;m++)
            {
                if(m==0)
               {
                 dp[n][m]=1;
                 continue;
                }
                else if(n==0)
               {
                 dp[n][m]=0;
                 continue;
               }
               
              
        int a=dp[n-1][m-1];
        int b=dp[n-1][m];
        if(s1.charAt(n-1)==s2.charAt(m-1))
        {
            dp[n][m]=a+b;
        }
        else
        {
           dp[n][m]=b;
        }
               
               
            }
        }
        return dp[N][M];
        
    }
    int countWays(String s1, String s2) { 
        // code here 
        int n=s1.length(),m=s2.length();
        int[][] dp=new int[n+1][m+1];
        
        int ans=countWays_tabu(s1,s2,n,m,dp);
        return ans;
    }